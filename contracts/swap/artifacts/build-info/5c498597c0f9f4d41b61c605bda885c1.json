{
	"id": "5c498597c0f9f4d41b61c605bda885c1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/swap/swap.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract Exchange {\r\n    address tokenAddr;\r\n\r\n    constructor(address _tokenADdr) {\r\n        tokenAddr = _tokenADdr;\r\n    }\r\n\r\n    function getReserve() public view returns(uint256) {\r\n        return IERC20(tokenAddr).balanceOf(address(this));\r\n    }\r\n    \r\n    function getAmount(\r\n        uint256 inputToken,\r\n        uint256 inputTokenReserve,\r\n        uint256 outputTokenReserve\r\n    ) public pure returns(uint256){\r\n        return outputTokenReserve * inputToken / (inputToken + inputTokenReserve);\r\n    }\r\n\r\n    function addLiquidity(uint256 _tokenAmount) payable external  {\r\n        if (getReserve() == 0) {\r\n            \r\n        }\r\n        IERC20(tokenAddr).transferFrom(msg.sender, address(this), _tokenAmount);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/swap/swap.sol": {
				"Exchange": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenADdr",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenAmount",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "inputToken",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "inputTokenReserve",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "outputTokenReserve",
									"type": "uint256"
								}
							],
							"name": "getAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserve",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/swap/swap.sol\":120:853  contract Exchange {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/swap/swap.sol\":171:244  constructor(address _tokenADdr) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/swap/swap.sol\":226:236  _tokenADdr */\n  dup1\n    /* \"contracts/swap/swap.sol\":214:223  tokenAddr */\n  0x00\n  dup1\n    /* \"contracts/swap/swap.sol\":214:236  tokenAddr = _tokenADdr */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/swap/swap.sol\":171:244  constructor(address _tokenADdr) {... */\n  pop\n    /* \"contracts/swap/swap.sol\":120:853  contract Exchange {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_20\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_12:\n    /* \"#utility.yul\":641:665   */\n  tag_22\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_11\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_23\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_23:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_13:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_25\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_28\n  tag_8\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":932:1051   */\ntag_27:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_29\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_13\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/swap/swap.sol\":120:853  contract Exchange {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/swap/swap.sol\":120:853  contract Exchange {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x29c45cb6\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x51c6590a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x59bf5d39\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/swap/swap.sol\":383:631  function getAmount(... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_5:\n      pop\n      tag_6\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      tag_9\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/swap/swap.sol\":639:850  function addLiquidity(uint256 _tokenAmount) payable external  {... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/swap/swap.sol\":252:371  function getReserve() public view returns(uint256) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/swap/swap.sol\":383:631  function getAmount(... */\n    tag_9:\n        /* \"contracts/swap/swap.sol\":531:538  uint256 */\n      0x00\n        /* \"contracts/swap/swap.sol\":605:622  inputTokenReserve */\n      dup3\n        /* \"contracts/swap/swap.sol\":592:602  inputToken */\n      dup5\n        /* \"contracts/swap/swap.sol\":592:622  inputToken + inputTokenReserve */\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n        /* \"contracts/swap/swap.sol\":578:588  inputToken */\n      dup5\n        /* \"contracts/swap/swap.sol\":557:575  outputTokenReserve */\n      dup4\n        /* \"contracts/swap/swap.sol\":557:588  outputTokenReserve * inputToken */\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n        /* \"contracts/swap/swap.sol\":557:623  outputTokenReserve * inputToken / (inputToken + inputTokenReserve) */\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n        /* \"contracts/swap/swap.sol\":550:623  return outputTokenReserve * inputToken / (inputToken + inputTokenReserve) */\n      swap1\n      pop\n        /* \"contracts/swap/swap.sol\":383:631  function getAmount(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/swap/swap.sol\":639:850  function addLiquidity(uint256 _tokenAmount) payable external  {... */\n    tag_15:\n        /* \"contracts/swap/swap.sol\":732:733  0 */\n      0x00\n        /* \"contracts/swap/swap.sol\":716:728  getReserve() */\n      tag_28\n        /* \"contracts/swap/swap.sol\":716:726  getReserve */\n      tag_18\n        /* \"contracts/swap/swap.sol\":716:728  getReserve() */\n      jump\t// in\n    tag_28:\n        /* \"contracts/swap/swap.sol\":716:733  getReserve() == 0 */\n      pop\n      pop\n        /* \"contracts/swap/swap.sol\":778:787  tokenAddr */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/swap/swap.sol\":771:801  IERC20(tokenAddr).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/swap/swap.sol\":802:812  msg.sender */\n      caller\n        /* \"contracts/swap/swap.sol\":822:826  this */\n      address\n        /* \"contracts/swap/swap.sol\":829:841  _tokenAmount */\n      dup5\n        /* \"contracts/swap/swap.sol\":771:842  IERC20(tokenAddr).transferFrom(msg.sender, address(this), _tokenAmount) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_30\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_33\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_33:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      pop\n        /* \"contracts/swap/swap.sol\":639:850  function addLiquidity(uint256 _tokenAmount) payable external  {... */\n      pop\n      jump\t// out\n        /* \"contracts/swap/swap.sol\":252:371  function getReserve() public view returns(uint256) {... */\n    tag_18:\n        /* \"contracts/swap/swap.sol\":294:301  uint256 */\n      0x00\n        /* \"contracts/swap/swap.sol\":328:337  tokenAddr */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/swap/swap.sol\":321:348  IERC20(tokenAddr).balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contracts/swap/swap.sol\":357:361  this */\n      address\n        /* \"contracts/swap/swap.sol\":321:363  IERC20(tokenAddr).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_40\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_40:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"contracts/swap/swap.sol\":314:363  return IERC20(tokenAddr).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/swap/swap.sol\":252:371  function getReserve() public view returns(uint256) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_44:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_46:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_47:\n        /* \"#utility.yul\":490:514   */\n      tag_65\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_46\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_66\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_66:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_48:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_68\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_47\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1309   */\n    tag_8:\n        /* \"#utility.yul\":767:773   */\n      0x00\n        /* \"#utility.yul\":775:781   */\n      dup1\n        /* \"#utility.yul\":783:789   */\n      0x00\n        /* \"#utility.yul\":832:834   */\n      0x60\n        /* \"#utility.yul\":820:829   */\n      dup5\n        /* \"#utility.yul\":811:818   */\n      dup7\n        /* \"#utility.yul\":807:830   */\n      sub\n        /* \"#utility.yul\":803:835   */\n      slt\n        /* \"#utility.yul\":800:919   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":838:917   */\n      tag_71\n      tag_44\n      jump\t// in\n    tag_71:\n        /* \"#utility.yul\":800:919   */\n    tag_70:\n        /* \"#utility.yul\":958:959   */\n      0x00\n        /* \"#utility.yul\":983:1036   */\n      tag_72\n        /* \"#utility.yul\":1028:1035   */\n      dup7\n        /* \"#utility.yul\":1019:1025   */\n      dup3\n        /* \"#utility.yul\":1008:1017   */\n      dup8\n        /* \"#utility.yul\":1004:1026   */\n      add\n        /* \"#utility.yul\":983:1036   */\n      tag_48\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":973:1036   */\n      swap4\n      pop\n        /* \"#utility.yul\":929:1046   */\n      pop\n        /* \"#utility.yul\":1085:1087   */\n      0x20\n        /* \"#utility.yul\":1111:1164   */\n      tag_73\n        /* \"#utility.yul\":1156:1163   */\n      dup7\n        /* \"#utility.yul\":1147:1153   */\n      dup3\n        /* \"#utility.yul\":1136:1145   */\n      dup8\n        /* \"#utility.yul\":1132:1154   */\n      add\n        /* \"#utility.yul\":1111:1164   */\n      tag_48\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1101:1164   */\n      swap3\n      pop\n        /* \"#utility.yul\":1056:1174   */\n      pop\n        /* \"#utility.yul\":1213:1215   */\n      0x40\n        /* \"#utility.yul\":1239:1292   */\n      tag_74\n        /* \"#utility.yul\":1284:1291   */\n      dup7\n        /* \"#utility.yul\":1275:1281   */\n      dup3\n        /* \"#utility.yul\":1264:1273   */\n      dup8\n        /* \"#utility.yul\":1260:1282   */\n      add\n        /* \"#utility.yul\":1239:1292   */\n      tag_48\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1229:1292   */\n      swap2\n      pop\n        /* \"#utility.yul\":1184:1302   */\n      pop\n        /* \"#utility.yul\":690:1309   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1315:1433   */\n    tag_49:\n        /* \"#utility.yul\":1402:1426   */\n      tag_76\n        /* \"#utility.yul\":1420:1425   */\n      dup2\n        /* \"#utility.yul\":1402:1426   */\n      tag_46\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1397:1400   */\n      dup3\n        /* \"#utility.yul\":1390:1427   */\n      mstore\n        /* \"#utility.yul\":1315:1433   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1439:1661   */\n    tag_11:\n        /* \"#utility.yul\":1532:1536   */\n      0x00\n        /* \"#utility.yul\":1570:1572   */\n      0x20\n        /* \"#utility.yul\":1559:1568   */\n      dup3\n        /* \"#utility.yul\":1555:1573   */\n      add\n        /* \"#utility.yul\":1547:1573   */\n      swap1\n      pop\n        /* \"#utility.yul\":1583:1654   */\n      tag_78\n        /* \"#utility.yul\":1651:1652   */\n      0x00\n        /* \"#utility.yul\":1640:1649   */\n      dup4\n        /* \"#utility.yul\":1636:1653   */\n      add\n        /* \"#utility.yul\":1627:1633   */\n      dup5\n        /* \"#utility.yul\":1583:1654   */\n      tag_49\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1439:1661   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1667:1996   */\n    tag_14:\n        /* \"#utility.yul\":1726:1732   */\n      0x00\n        /* \"#utility.yul\":1775:1777   */\n      0x20\n        /* \"#utility.yul\":1763:1772   */\n      dup3\n        /* \"#utility.yul\":1754:1761   */\n      dup5\n        /* \"#utility.yul\":1750:1773   */\n      sub\n        /* \"#utility.yul\":1746:1778   */\n      slt\n        /* \"#utility.yul\":1743:1862   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":1781:1860   */\n      tag_81\n      tag_44\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1743:1862   */\n    tag_80:\n        /* \"#utility.yul\":1901:1902   */\n      0x00\n        /* \"#utility.yul\":1926:1979   */\n      tag_82\n        /* \"#utility.yul\":1971:1978   */\n      dup5\n        /* \"#utility.yul\":1962:1968   */\n      dup3\n        /* \"#utility.yul\":1951:1960   */\n      dup6\n        /* \"#utility.yul\":1947:1969   */\n      add\n        /* \"#utility.yul\":1926:1979   */\n      tag_48\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":1916:1979   */\n      swap2\n      pop\n        /* \"#utility.yul\":1872:1989   */\n      pop\n        /* \"#utility.yul\":1667:1996   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2002:2182   */\n    tag_50:\n        /* \"#utility.yul\":2050:2127   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2047:2048   */\n      0x00\n        /* \"#utility.yul\":2040:2128   */\n      mstore\n        /* \"#utility.yul\":2147:2151   */\n      0x11\n        /* \"#utility.yul\":2144:2145   */\n      0x04\n        /* \"#utility.yul\":2137:2152   */\n      mstore\n        /* \"#utility.yul\":2171:2175   */\n      0x24\n        /* \"#utility.yul\":2168:2169   */\n      0x00\n        /* \"#utility.yul\":2161:2176   */\n      revert\n        /* \"#utility.yul\":2188:2379   */\n    tag_22:\n        /* \"#utility.yul\":2228:2231   */\n      0x00\n        /* \"#utility.yul\":2247:2267   */\n      tag_85\n        /* \"#utility.yul\":2265:2266   */\n      dup3\n        /* \"#utility.yul\":2247:2267   */\n      tag_46\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2242:2267   */\n      swap2\n      pop\n        /* \"#utility.yul\":2281:2301   */\n      tag_86\n        /* \"#utility.yul\":2299:2300   */\n      dup4\n        /* \"#utility.yul\":2281:2301   */\n      tag_46\n      jump\t// in\n    tag_86:\n        /* \"#utility.yul\":2276:2301   */\n      swap3\n      pop\n        /* \"#utility.yul\":2324:2325   */\n      dup3\n        /* \"#utility.yul\":2321:2322   */\n      dup3\n        /* \"#utility.yul\":2317:2326   */\n      add\n        /* \"#utility.yul\":2310:2326   */\n      swap1\n      pop\n        /* \"#utility.yul\":2345:2348   */\n      dup1\n        /* \"#utility.yul\":2342:2343   */\n      dup3\n        /* \"#utility.yul\":2339:2349   */\n      gt\n        /* \"#utility.yul\":2336:2372   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":2352:2370   */\n      tag_88\n      tag_50\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2336:2372   */\n    tag_87:\n        /* \"#utility.yul\":2188:2379   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2385:2795   */\n    tag_24:\n        /* \"#utility.yul\":2425:2432   */\n      0x00\n        /* \"#utility.yul\":2448:2468   */\n      tag_90\n        /* \"#utility.yul\":2466:2467   */\n      dup3\n        /* \"#utility.yul\":2448:2468   */\n      tag_46\n      jump\t// in\n    tag_90:\n        /* \"#utility.yul\":2443:2468   */\n      swap2\n      pop\n        /* \"#utility.yul\":2482:2502   */\n      tag_91\n        /* \"#utility.yul\":2500:2501   */\n      dup4\n        /* \"#utility.yul\":2482:2502   */\n      tag_46\n      jump\t// in\n    tag_91:\n        /* \"#utility.yul\":2477:2502   */\n      swap3\n      pop\n        /* \"#utility.yul\":2537:2538   */\n      dup3\n        /* \"#utility.yul\":2534:2535   */\n      dup3\n        /* \"#utility.yul\":2530:2539   */\n      mul\n        /* \"#utility.yul\":2559:2589   */\n      tag_92\n        /* \"#utility.yul\":2577:2588   */\n      dup2\n        /* \"#utility.yul\":2559:2589   */\n      tag_46\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2548:2589   */\n      swap2\n      pop\n        /* \"#utility.yul\":2738:2739   */\n      dup3\n        /* \"#utility.yul\":2729:2736   */\n      dup3\n        /* \"#utility.yul\":2725:2740   */\n      div\n        /* \"#utility.yul\":2722:2723   */\n      dup5\n        /* \"#utility.yul\":2719:2741   */\n      eq\n        /* \"#utility.yul\":2699:2700   */\n      dup4\n        /* \"#utility.yul\":2692:2701   */\n      iszero\n        /* \"#utility.yul\":2672:2755   */\n      or\n        /* \"#utility.yul\":2649:2788   */\n      tag_93\n      jumpi\n        /* \"#utility.yul\":2768:2786   */\n      tag_94\n      tag_50\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2649:2788   */\n    tag_93:\n        /* \"#utility.yul\":2433:2795   */\n      pop\n        /* \"#utility.yul\":2385:2795   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2801:2981   */\n    tag_51:\n        /* \"#utility.yul\":2849:2926   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":2846:2847   */\n      0x00\n        /* \"#utility.yul\":2839:2927   */\n      mstore\n        /* \"#utility.yul\":2946:2950   */\n      0x12\n        /* \"#utility.yul\":2943:2944   */\n      0x04\n        /* \"#utility.yul\":2936:2951   */\n      mstore\n        /* \"#utility.yul\":2970:2974   */\n      0x24\n        /* \"#utility.yul\":2967:2968   */\n      0x00\n        /* \"#utility.yul\":2960:2975   */\n      revert\n        /* \"#utility.yul\":2987:3172   */\n    tag_26:\n        /* \"#utility.yul\":3027:3028   */\n      0x00\n        /* \"#utility.yul\":3044:3064   */\n      tag_97\n        /* \"#utility.yul\":3062:3063   */\n      dup3\n        /* \"#utility.yul\":3044:3064   */\n      tag_46\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":3039:3064   */\n      swap2\n      pop\n        /* \"#utility.yul\":3078:3098   */\n      tag_98\n        /* \"#utility.yul\":3096:3097   */\n      dup4\n        /* \"#utility.yul\":3078:3098   */\n      tag_46\n      jump\t// in\n    tag_98:\n        /* \"#utility.yul\":3073:3098   */\n      swap3\n      pop\n        /* \"#utility.yul\":3117:3118   */\n      dup3\n        /* \"#utility.yul\":3107:3142   */\n      tag_99\n      jumpi\n        /* \"#utility.yul\":3122:3140   */\n      tag_100\n      tag_51\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":3107:3142   */\n    tag_99:\n        /* \"#utility.yul\":3164:3165   */\n      dup3\n        /* \"#utility.yul\":3161:3162   */\n      dup3\n        /* \"#utility.yul\":3157:3166   */\n      div\n        /* \"#utility.yul\":3152:3166   */\n      swap1\n      pop\n        /* \"#utility.yul\":2987:3172   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3178:3304   */\n    tag_52:\n        /* \"#utility.yul\":3215:3222   */\n      0x00\n        /* \"#utility.yul\":3255:3297   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3248:3253   */\n      dup3\n        /* \"#utility.yul\":3244:3298   */\n      and\n        /* \"#utility.yul\":3233:3298   */\n      swap1\n      pop\n        /* \"#utility.yul\":3178:3304   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3310:3406   */\n    tag_53:\n        /* \"#utility.yul\":3347:3354   */\n      0x00\n        /* \"#utility.yul\":3376:3400   */\n      tag_103\n        /* \"#utility.yul\":3394:3399   */\n      dup3\n        /* \"#utility.yul\":3376:3400   */\n      tag_52\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":3365:3400   */\n      swap1\n      pop\n        /* \"#utility.yul\":3310:3406   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3412:3530   */\n    tag_54:\n        /* \"#utility.yul\":3499:3523   */\n      tag_105\n        /* \"#utility.yul\":3517:3522   */\n      dup2\n        /* \"#utility.yul\":3499:3523   */\n      tag_53\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3494:3497   */\n      dup3\n        /* \"#utility.yul\":3487:3524   */\n      mstore\n        /* \"#utility.yul\":3412:3530   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3536:3978   */\n    tag_31:\n        /* \"#utility.yul\":3685:3689   */\n      0x00\n        /* \"#utility.yul\":3723:3725   */\n      0x60\n        /* \"#utility.yul\":3712:3721   */\n      dup3\n        /* \"#utility.yul\":3708:3726   */\n      add\n        /* \"#utility.yul\":3700:3726   */\n      swap1\n      pop\n        /* \"#utility.yul\":3736:3807   */\n      tag_107\n        /* \"#utility.yul\":3804:3805   */\n      0x00\n        /* \"#utility.yul\":3793:3802   */\n      dup4\n        /* \"#utility.yul\":3789:3806   */\n      add\n        /* \"#utility.yul\":3780:3786   */\n      dup7\n        /* \"#utility.yul\":3736:3807   */\n      tag_54\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":3817:3889   */\n      tag_108\n        /* \"#utility.yul\":3885:3887   */\n      0x20\n        /* \"#utility.yul\":3874:3883   */\n      dup4\n        /* \"#utility.yul\":3870:3888   */\n      add\n        /* \"#utility.yul\":3861:3867   */\n      dup6\n        /* \"#utility.yul\":3817:3889   */\n      tag_54\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3899:3971   */\n      tag_109\n        /* \"#utility.yul\":3967:3969   */\n      0x40\n        /* \"#utility.yul\":3956:3965   */\n      dup4\n        /* \"#utility.yul\":3952:3970   */\n      add\n        /* \"#utility.yul\":3943:3949   */\n      dup5\n        /* \"#utility.yul\":3899:3971   */\n      tag_49\n      jump\t// in\n    tag_109:\n        /* \"#utility.yul\":3536:3978   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3984:4074   */\n    tag_55:\n        /* \"#utility.yul\":4018:4025   */\n      0x00\n        /* \"#utility.yul\":4061:4066   */\n      dup2\n        /* \"#utility.yul\":4054:4067   */\n      iszero\n        /* \"#utility.yul\":4047:4068   */\n      iszero\n        /* \"#utility.yul\":4036:4068   */\n      swap1\n      pop\n        /* \"#utility.yul\":3984:4074   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4080:4196   */\n    tag_56:\n        /* \"#utility.yul\":4150:4171   */\n      tag_112\n        /* \"#utility.yul\":4165:4170   */\n      dup2\n        /* \"#utility.yul\":4150:4171   */\n      tag_55\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":4143:4148   */\n      dup2\n        /* \"#utility.yul\":4140:4172   */\n      eq\n        /* \"#utility.yul\":4130:4190   */\n      tag_113\n      jumpi\n        /* \"#utility.yul\":4186:4187   */\n      0x00\n        /* \"#utility.yul\":4183:4184   */\n      dup1\n        /* \"#utility.yul\":4176:4188   */\n      revert\n        /* \"#utility.yul\":4130:4190   */\n    tag_113:\n        /* \"#utility.yul\":4080:4196   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4202:4339   */\n    tag_57:\n        /* \"#utility.yul\":4256:4261   */\n      0x00\n        /* \"#utility.yul\":4287:4293   */\n      dup2\n        /* \"#utility.yul\":4281:4294   */\n      mload\n        /* \"#utility.yul\":4272:4294   */\n      swap1\n      pop\n        /* \"#utility.yul\":4303:4333   */\n      tag_115\n        /* \"#utility.yul\":4327:4332   */\n      dup2\n        /* \"#utility.yul\":4303:4333   */\n      tag_56\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":4202:4339   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4345:4690   */\n    tag_35:\n        /* \"#utility.yul\":4412:4418   */\n      0x00\n        /* \"#utility.yul\":4461:4463   */\n      0x20\n        /* \"#utility.yul\":4449:4458   */\n      dup3\n        /* \"#utility.yul\":4440:4447   */\n      dup5\n        /* \"#utility.yul\":4436:4459   */\n      sub\n        /* \"#utility.yul\":4432:4464   */\n      slt\n        /* \"#utility.yul\":4429:4548   */\n      iszero\n      tag_117\n      jumpi\n        /* \"#utility.yul\":4467:4546   */\n      tag_118\n      tag_44\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":4429:4548   */\n    tag_117:\n        /* \"#utility.yul\":4587:4588   */\n      0x00\n        /* \"#utility.yul\":4612:4673   */\n      tag_119\n        /* \"#utility.yul\":4665:4672   */\n      dup5\n        /* \"#utility.yul\":4656:4662   */\n      dup3\n        /* \"#utility.yul\":4645:4654   */\n      dup6\n        /* \"#utility.yul\":4641:4663   */\n      add\n        /* \"#utility.yul\":4612:4673   */\n      tag_57\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":4602:4673   */\n      swap2\n      pop\n        /* \"#utility.yul\":4558:4683   */\n      pop\n        /* \"#utility.yul\":4345:4690   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4696:4918   */\n    tag_38:\n        /* \"#utility.yul\":4789:4793   */\n      0x00\n        /* \"#utility.yul\":4827:4829   */\n      0x20\n        /* \"#utility.yul\":4816:4825   */\n      dup3\n        /* \"#utility.yul\":4812:4830   */\n      add\n        /* \"#utility.yul\":4804:4830   */\n      swap1\n      pop\n        /* \"#utility.yul\":4840:4911   */\n      tag_121\n        /* \"#utility.yul\":4908:4909   */\n      0x00\n        /* \"#utility.yul\":4897:4906   */\n      dup4\n        /* \"#utility.yul\":4893:4910   */\n      add\n        /* \"#utility.yul\":4884:4890   */\n      dup5\n        /* \"#utility.yul\":4840:4911   */\n      tag_54\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":4696:4918   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4924:5067   */\n    tag_58:\n        /* \"#utility.yul\":4981:4986   */\n      0x00\n        /* \"#utility.yul\":5012:5018   */\n      dup2\n        /* \"#utility.yul\":5006:5019   */\n      mload\n        /* \"#utility.yul\":4997:5019   */\n      swap1\n      pop\n        /* \"#utility.yul\":5028:5061   */\n      tag_123\n        /* \"#utility.yul\":5055:5060   */\n      dup2\n        /* \"#utility.yul\":5028:5061   */\n      tag_47\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":4924:5067   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5073:5424   */\n    tag_42:\n        /* \"#utility.yul\":5143:5149   */\n      0x00\n        /* \"#utility.yul\":5192:5194   */\n      0x20\n        /* \"#utility.yul\":5180:5189   */\n      dup3\n        /* \"#utility.yul\":5171:5178   */\n      dup5\n        /* \"#utility.yul\":5167:5190   */\n      sub\n        /* \"#utility.yul\":5163:5195   */\n      slt\n        /* \"#utility.yul\":5160:5279   */\n      iszero\n      tag_125\n      jumpi\n        /* \"#utility.yul\":5198:5277   */\n      tag_126\n      tag_44\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":5160:5279   */\n    tag_125:\n        /* \"#utility.yul\":5318:5319   */\n      0x00\n        /* \"#utility.yul\":5343:5407   */\n      tag_127\n        /* \"#utility.yul\":5399:5406   */\n      dup5\n        /* \"#utility.yul\":5390:5396   */\n      dup3\n        /* \"#utility.yul\":5379:5388   */\n      dup6\n        /* \"#utility.yul\":5375:5397   */\n      add\n        /* \"#utility.yul\":5343:5407   */\n      tag_58\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":5333:5407   */\n      swap2\n      pop\n        /* \"#utility.yul\":5289:5417   */\n      pop\n        /* \"#utility.yul\":5073:5424   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fce71205cb9839f882d7eed3c273d32888bf68ae44f613a7a165ee6e311b472264736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_92": {
									"entryPoint": null,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 125,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 120,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1199:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:2",
														"type": ""
													}
												],
												"src": "466:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:2"
															},
															"nodeType": "YulIf",
															"src": "621:63:2"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:2",
														"type": ""
													}
												],
												"src": "568:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "759:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "769:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "778:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "800:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "800:33:2"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "737:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "745:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "753:5:2",
														"type": ""
													}
												],
												"src": "696:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "922:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "968:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "964:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "935:32:2"
															},
															"nodeType": "YulIf",
															"src": "932:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1061:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1105:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "892:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "903:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "915:6:2",
														"type": ""
													}
												],
												"src": "845:351:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516106ad3803806106ad833981810160405281019061003291906100db565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610108565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b6100b88161009d565b81146100c357600080fd5b50565b6000815190506100d5816100af565b92915050565b6000602082840312156100f1576100f0610078565b5b60006100ff848285016100c6565b91505092915050565b610596806101176000396000f3fe6080604052600436106100345760003560e01c806329c45cb61461003957806351c6590a1461007657806359bf5d3914610092575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610277565b6100bd565b60405161006d91906102d9565b60405180910390f35b610090600480360381019061008b91906102f4565b6100ea565b005b34801561009e57600080fd5b506100a761019a565b6040516100b491906102d9565b60405180910390f35b600082846100cb9190610350565b84836100d79190610384565b6100e191906103f5565b90509392505050565b60006100f461019a565b505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161015393929190610467565b6020604051808303816000875af1158015610172573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019691906104d6565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101f69190610503565b602060405180830381865afa158015610213573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102379190610533565b905090565b600080fd5b6000819050919050565b61025481610241565b811461025f57600080fd5b50565b6000813590506102718161024b565b92915050565b6000806000606084860312156102905761028f61023c565b5b600061029e86828701610262565b93505060206102af86828701610262565b92505060406102c086828701610262565b9150509250925092565b6102d381610241565b82525050565b60006020820190506102ee60008301846102ca565b92915050565b60006020828403121561030a5761030961023c565b5b600061031884828501610262565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061035b82610241565b915061036683610241565b925082820190508082111561037e5761037d610321565b5b92915050565b600061038f82610241565b915061039a83610241565b92508282026103a881610241565b915082820484148315176103bf576103be610321565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061040082610241565b915061040b83610241565b92508261041b5761041a6103c6565b5b828204905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061045182610426565b9050919050565b61046181610446565b82525050565b600060608201905061047c6000830186610458565b6104896020830185610458565b61049660408301846102ca565b949350505050565b60008115159050919050565b6104b38161049e565b81146104be57600080fd5b50565b6000815190506104d0816104aa565b92915050565b6000602082840312156104ec576104eb61023c565b5b60006104fa848285016104c1565b91505092915050565b60006020820190506105186000830184610458565b92915050565b60008151905061052d8161024b565b92915050565b6000602082840312156105495761054861023c565b5b60006105578482850161051e565b9150509291505056fea2646970667358221220fce71205cb9839f882d7eed3c273d32888bf68ae44f613a7a165ee6e311b472264736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x6AD CODESIZE SUB DUP1 PUSH2 0x6AD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xDB JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x108 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA8 DUP3 PUSH2 0x7D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB8 DUP2 PUSH2 0x9D JUMP JUMPDEST DUP2 EQ PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xD5 DUP2 PUSH2 0xAF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF1 JUMPI PUSH2 0xF0 PUSH2 0x78 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFF DUP5 DUP3 DUP6 ADD PUSH2 0xC6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x596 DUP1 PUSH2 0x117 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29C45CB6 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x59BF5D39 EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x277 JUMP JUMPDEST PUSH2 0xBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0xEA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH2 0x19A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x350 JUMP JUMPDEST DUP5 DUP4 PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0x384 JUMP JUMPDEST PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x3F5 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4 PUSH2 0x19A JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x172 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x4D6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x503 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x213 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x533 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x254 DUP2 PUSH2 0x241 JUMP JUMPDEST DUP2 EQ PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x271 DUP2 PUSH2 0x24B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x290 JUMPI PUSH2 0x28F PUSH2 0x23C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29E DUP7 DUP3 DUP8 ADD PUSH2 0x262 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2AF DUP7 DUP3 DUP8 ADD PUSH2 0x262 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2C0 DUP7 DUP3 DUP8 ADD PUSH2 0x262 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2D3 DUP2 PUSH2 0x241 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30A JUMPI PUSH2 0x309 PUSH2 0x23C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x318 DUP5 DUP3 DUP6 ADD PUSH2 0x262 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x35B DUP3 PUSH2 0x241 JUMP JUMPDEST SWAP2 POP PUSH2 0x366 DUP4 PUSH2 0x241 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x37E JUMPI PUSH2 0x37D PUSH2 0x321 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38F DUP3 PUSH2 0x241 JUMP JUMPDEST SWAP2 POP PUSH2 0x39A DUP4 PUSH2 0x241 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3A8 DUP2 PUSH2 0x241 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3BF JUMPI PUSH2 0x3BE PUSH2 0x321 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x400 DUP3 PUSH2 0x241 JUMP JUMPDEST SWAP2 POP PUSH2 0x40B DUP4 PUSH2 0x241 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x41B JUMPI PUSH2 0x41A PUSH2 0x3C6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x451 DUP3 PUSH2 0x426 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x461 DUP2 PUSH2 0x446 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x47C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x458 JUMP JUMPDEST PUSH2 0x489 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x458 JUMP JUMPDEST PUSH2 0x496 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2CA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B3 DUP2 PUSH2 0x49E JUMP JUMPDEST DUP2 EQ PUSH2 0x4BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4D0 DUP2 PUSH2 0x4AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4EC JUMPI PUSH2 0x4EB PUSH2 0x23C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4FA DUP5 DUP3 DUP6 ADD PUSH2 0x4C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x518 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x458 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x52D DUP2 PUSH2 0x24B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x549 JUMPI PUSH2 0x548 PUSH2 0x23C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x557 DUP5 DUP3 DUP6 ADD PUSH2 0x51E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0xE7 SLT SDIV 0xCB SWAP9 CODECOPY 0xF8 DUP3 0xD7 0xEE 0xD3 0xC2 PUSH20 0xD32888BF68AE44F613A7A165EE6E311B47226473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "120:733:1:-:0;;;171:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;226:10;214:9;;:22;;;;;;;;;;;;;;;;;;171:73;120:733;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;120:733:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@addLiquidity_154": {
									"entryPoint": 234,
									"id": 154,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getAmount_129": {
									"entryPoint": 189,
									"id": 129,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getReserve_108": {
									"entryPoint": 410,
									"id": 108,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 1217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1112,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1127,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1094,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 1182,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 577,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 801,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 966,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 572,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 1194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:5427:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "400:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:2",
														"type": ""
													}
												],
												"src": "334:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "460:79:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "517:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "526:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "529:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "473:43:2"
															},
															"nodeType": "YulIf",
															"src": "470:63:2"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "453:5:2",
														"type": ""
													}
												],
												"src": "417:122:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "597:87:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "607:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "616:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "645:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "645:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "575:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "583:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "591:5:2",
														"type": ""
													}
												],
												"src": "545:139:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "790:519:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "836:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "838:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "838:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "838:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "811:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "820:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "807:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "807:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "832:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "803:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "803:32:2"
															},
															"nodeType": "YulIf",
															"src": "800:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "929:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "944:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "958:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "948:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "973:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1008:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1019:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1004:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1004:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1028:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "983:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "983:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "973:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1056:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1071:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1085:2:2",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1075:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1101:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1136:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1147:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1132:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1132:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1156:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1111:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1111:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1101:6:2"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1184:118:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1199:16:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:2:2",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1203:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1229:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1264:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1275:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1260:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1260:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1284:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1239:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1239:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1229:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "744:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "755:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "767:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "775:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "783:6:2",
														"type": ""
													}
												],
												"src": "690:619:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1380:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1397:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1420:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1402:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1402:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1390:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1390:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1390:37:2"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1368:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1375:3:2",
														"type": ""
													}
												],
												"src": "1315:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1537:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1547:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1559:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1570:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1555:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1555:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1547:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1627:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1640:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1651:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1636:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1636:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1583:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1583:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1509:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1521:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1532:4:2",
														"type": ""
													}
												],
												"src": "1439:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1733:263:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1779:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1781:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1781:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1781:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1754:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1763:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1750:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1750:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1775:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1746:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1746:32:2"
															},
															"nodeType": "YulIf",
															"src": "1743:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "1872:117:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1887:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1901:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1891:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1916:63:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1951:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1962:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1947:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1947:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1971:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1926:20:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1926:53:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1916:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1703:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1714:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1726:6:2",
														"type": ""
													}
												],
												"src": "1667:329:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2030:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2047:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2050:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2040:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2040:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2040:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2144:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2147:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2137:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2137:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2137:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2168:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2171:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2161:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2161:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2161:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "2002:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2232:147:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2242:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2265:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2247:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2247:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2242:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2276:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2299:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2281:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2281:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2276:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2310:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2321:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2324:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2317:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2317:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "2310:3:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2350:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2352:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2352:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2352:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2342:1:2"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "2345:3:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2339:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2339:10:2"
															},
															"nodeType": "YulIf",
															"src": "2336:36:2"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2219:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2222:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "2228:3:2",
														"type": ""
													}
												],
												"src": "2188:191:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2433:362:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2443:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2466:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2448:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2448:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "2443:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2477:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2500:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2482:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2482:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "2477:1:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2511:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2534:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2537:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2530:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2530:9:2"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "2515:11:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2548:41:2",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "2577:11:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2559:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2559:30:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2548:7:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2766:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2768:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2768:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2768:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2699:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2692:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2692:9:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "2722:1:2"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "2729:7:2"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "2738:1:2"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "2725:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2725:15:2"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "2719:2:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2719:22:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "2672:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2672:83:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2652:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2652:113:2"
															},
															"nodeType": "YulIf",
															"src": "2649:139:2"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2416:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2419:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "2425:7:2",
														"type": ""
													}
												],
												"src": "2385:410:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2829:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2846:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2849:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2839:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2839:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2839:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2943:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2946:4:2",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2936:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2936:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2936:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2967:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2970:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2960:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2960:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2960:15:2"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "2801:180:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3029:143:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3039:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3062:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3044:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3044:20:2"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "3039:1:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3073:25:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3096:1:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3078:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3078:20:2"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "3073:1:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3120:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "3122:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3122:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3122:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3117:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3110:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3110:9:2"
															},
															"nodeType": "YulIf",
															"src": "3107:35:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3152:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3161:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3164:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3157:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3157:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "3152:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3018:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3021:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "3027:1:2",
														"type": ""
													}
												],
												"src": "2987:185:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3223:81:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3233:65:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3248:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3255:42:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3244:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3244:54:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3233:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3205:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3215:7:2",
														"type": ""
													}
												],
												"src": "3178:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3355:51:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3365:35:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3394:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3376:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3376:24:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3365:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3337:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3347:7:2",
														"type": ""
													}
												],
												"src": "3310:96:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3477:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3494:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3517:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3499:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3487:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3487:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3487:37:2"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3465:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3472:3:2",
														"type": ""
													}
												],
												"src": "3412:118:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3690:288:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3700:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3712:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3723:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3708:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3708:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3700:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3780:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3793:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3804:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3789:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3789:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3736:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3736:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3736:71:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3861:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3874:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3885:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3870:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3870:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3817:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3817:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3817:72:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "3943:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3956:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3967:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3952:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3952:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3899:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3899:72:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3899:72:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3646:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3658:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3666:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3674:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3685:4:2",
														"type": ""
													}
												],
												"src": "3536:442:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4026:48:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4036:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4061:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "4054:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4054:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4047:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4047:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4036:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4008:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4018:7:2",
														"type": ""
													}
												],
												"src": "3984:90:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4120:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4174:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4183:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4186:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4176:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4176:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4176:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4143:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4165:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "4150:14:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4150:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4140:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4140:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4133:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4133:40:2"
															},
															"nodeType": "YulIf",
															"src": "4130:60:2"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4113:5:2",
														"type": ""
													}
												],
												"src": "4080:116:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4262:77:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4272:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4287:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4281:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4281:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4272:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4327:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4303:23:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4303:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4303:30:2"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4240:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4248:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4256:5:2",
														"type": ""
													}
												],
												"src": "4202:137:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4419:271:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4465:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4467:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4467:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4467:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4440:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4449:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4436:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4436:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4461:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4432:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4432:32:2"
															},
															"nodeType": "YulIf",
															"src": "4429:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "4558:125:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4573:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4587:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4577:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4602:71:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4645:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4656:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4641:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4641:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4665:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "4612:28:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4612:61:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4602:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4389:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4400:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4412:6:2",
														"type": ""
													}
												],
												"src": "4345:345:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4794:124:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4804:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4816:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4827:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4812:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4812:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4804:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4884:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4897:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4908:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4893:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4893:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4840:43:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4840:71:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4840:71:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4766:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4778:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4789:4:2",
														"type": ""
													}
												],
												"src": "4696:222:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4987:80:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4997:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5012:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5006:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5006:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4997:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5055:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5028:26:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5028:33:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5028:33:2"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4965:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4973:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4981:5:2",
														"type": ""
													}
												],
												"src": "4924:143:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5150:274:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5196:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5198:77:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5198:79:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5198:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5171:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5180:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5167:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5167:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5192:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5163:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5163:32:2"
															},
															"nodeType": "YulIf",
															"src": "5160:119:2"
														},
														{
															"nodeType": "YulBlock",
															"src": "5289:128:2",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5304:15:2",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5318:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5308:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5333:74:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5379:9:2"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5390:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5375:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5375:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5399:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "5343:31:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5343:64:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5333:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5120:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5131:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5143:6:2",
														"type": ""
													}
												],
												"src": "5073:351:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100345760003560e01c806329c45cb61461003957806351c6590a1461007657806359bf5d3914610092575b600080fd5b34801561004557600080fd5b50610060600480360381019061005b9190610277565b6100bd565b60405161006d91906102d9565b60405180910390f35b610090600480360381019061008b91906102f4565b6100ea565b005b34801561009e57600080fd5b506100a761019a565b6040516100b491906102d9565b60405180910390f35b600082846100cb9190610350565b84836100d79190610384565b6100e191906103f5565b90509392505050565b60006100f461019a565b505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b815260040161015393929190610467565b6020604051808303816000875af1158015610172573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061019691906104d6565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016101f69190610503565b602060405180830381865afa158015610213573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102379190610533565b905090565b600080fd5b6000819050919050565b61025481610241565b811461025f57600080fd5b50565b6000813590506102718161024b565b92915050565b6000806000606084860312156102905761028f61023c565b5b600061029e86828701610262565b93505060206102af86828701610262565b92505060406102c086828701610262565b9150509250925092565b6102d381610241565b82525050565b60006020820190506102ee60008301846102ca565b92915050565b60006020828403121561030a5761030961023c565b5b600061031884828501610262565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061035b82610241565b915061036683610241565b925082820190508082111561037e5761037d610321565b5b92915050565b600061038f82610241565b915061039a83610241565b92508282026103a881610241565b915082820484148315176103bf576103be610321565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061040082610241565b915061040b83610241565b92508261041b5761041a6103c6565b5b828204905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061045182610426565b9050919050565b61046181610446565b82525050565b600060608201905061047c6000830186610458565b6104896020830185610458565b61049660408301846102ca565b949350505050565b60008115159050919050565b6104b38161049e565b81146104be57600080fd5b50565b6000815190506104d0816104aa565b92915050565b6000602082840312156104ec576104eb61023c565b5b60006104fa848285016104c1565b91505092915050565b60006020820190506105186000830184610458565b92915050565b60008151905061052d8161024b565b92915050565b6000602082840312156105495761054861023c565b5b60006105578482850161051e565b9150509291505056fea2646970667358221220fce71205cb9839f882d7eed3c273d32888bf68ae44f613a7a165ee6e311b472264736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x29C45CB6 EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x51C6590A EQ PUSH2 0x76 JUMPI DUP1 PUSH4 0x59BF5D39 EQ PUSH2 0x92 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x60 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x277 JUMP JUMPDEST PUSH2 0xBD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6D SWAP2 SWAP1 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x90 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x8B SWAP2 SWAP1 PUSH2 0x2F4 JUMP JUMPDEST PUSH2 0xEA JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xA7 PUSH2 0x19A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x2D9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP3 DUP5 PUSH2 0xCB SWAP2 SWAP1 PUSH2 0x350 JUMP JUMPDEST DUP5 DUP4 PUSH2 0xD7 SWAP2 SWAP1 PUSH2 0x384 JUMP JUMPDEST PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0x3F5 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF4 PUSH2 0x19A JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x467 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x172 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x4D6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F6 SWAP2 SWAP1 PUSH2 0x503 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x213 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x533 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x254 DUP2 PUSH2 0x241 JUMP JUMPDEST DUP2 EQ PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x271 DUP2 PUSH2 0x24B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x290 JUMPI PUSH2 0x28F PUSH2 0x23C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x29E DUP7 DUP3 DUP8 ADD PUSH2 0x262 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2AF DUP7 DUP3 DUP8 ADD PUSH2 0x262 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2C0 DUP7 DUP3 DUP8 ADD PUSH2 0x262 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2D3 DUP2 PUSH2 0x241 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2EE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2CA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x30A JUMPI PUSH2 0x309 PUSH2 0x23C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x318 DUP5 DUP3 DUP6 ADD PUSH2 0x262 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x35B DUP3 PUSH2 0x241 JUMP JUMPDEST SWAP2 POP PUSH2 0x366 DUP4 PUSH2 0x241 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x37E JUMPI PUSH2 0x37D PUSH2 0x321 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38F DUP3 PUSH2 0x241 JUMP JUMPDEST SWAP2 POP PUSH2 0x39A DUP4 PUSH2 0x241 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x3A8 DUP2 PUSH2 0x241 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3BF JUMPI PUSH2 0x3BE PUSH2 0x321 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x400 DUP3 PUSH2 0x241 JUMP JUMPDEST SWAP2 POP PUSH2 0x40B DUP4 PUSH2 0x241 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x41B JUMPI PUSH2 0x41A PUSH2 0x3C6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x451 DUP3 PUSH2 0x426 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x461 DUP2 PUSH2 0x446 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x47C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x458 JUMP JUMPDEST PUSH2 0x489 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x458 JUMP JUMPDEST PUSH2 0x496 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2CA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4B3 DUP2 PUSH2 0x49E JUMP JUMPDEST DUP2 EQ PUSH2 0x4BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x4D0 DUP2 PUSH2 0x4AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4EC JUMPI PUSH2 0x4EB PUSH2 0x23C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4FA DUP5 DUP3 DUP6 ADD PUSH2 0x4C1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x518 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x458 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x52D DUP2 PUSH2 0x24B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x549 JUMPI PUSH2 0x548 PUSH2 0x23C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x557 DUP5 DUP3 DUP6 ADD PUSH2 0x51E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0xE7 SLT SDIV 0xCB SWAP9 CODECOPY 0xF8 DUP3 0xD7 0xEE 0xD3 0xC2 PUSH20 0xD32888BF68AE44F613A7A165EE6E311B47226473 PUSH16 0x6C634300081200330000000000000000 ",
							"sourceMap": "120:733:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;383:248;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;639:211;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;252:119;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;383:248;531:7;605:17;592:10;:30;;;;:::i;:::-;578:10;557:18;:31;;;;:::i;:::-;:66;;;;:::i;:::-;550:73;;383:248;;;;;:::o;639:211::-;732:1;716:12;:10;:12::i;:::-;:17;;778:9;;;;;;;;;;771:30;;;802:10;822:4;829:12;771:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;639:211;:::o;252:119::-;294:7;328:9;;;;;;;;;;;321:27;;;357:4;321:42;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;314:49;;252:119;:::o;88:117:2:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:619::-;767:6;775;783;832:2;820:9;811:7;807:23;803:32;800:119;;;838:79;;:::i;:::-;800:119;958:1;983:53;1028:7;1019:6;1008:9;1004:22;983:53;:::i;:::-;973:63;;929:117;1085:2;1111:53;1156:7;1147:6;1136:9;1132:22;1111:53;:::i;:::-;1101:63;;1056:118;1213:2;1239:53;1284:7;1275:6;1264:9;1260:22;1239:53;:::i;:::-;1229:63;;1184:118;690:619;;;;;:::o;1315:118::-;1402:24;1420:5;1402:24;:::i;:::-;1397:3;1390:37;1315:118;;:::o;1439:222::-;1532:4;1570:2;1559:9;1555:18;1547:26;;1583:71;1651:1;1640:9;1636:17;1627:6;1583:71;:::i;:::-;1439:222;;;;:::o;1667:329::-;1726:6;1775:2;1763:9;1754:7;1750:23;1746:32;1743:119;;;1781:79;;:::i;:::-;1743:119;1901:1;1926:53;1971:7;1962:6;1951:9;1947:22;1926:53;:::i;:::-;1916:63;;1872:117;1667:329;;;;:::o;2002:180::-;2050:77;2047:1;2040:88;2147:4;2144:1;2137:15;2171:4;2168:1;2161:15;2188:191;2228:3;2247:20;2265:1;2247:20;:::i;:::-;2242:25;;2281:20;2299:1;2281:20;:::i;:::-;2276:25;;2324:1;2321;2317:9;2310:16;;2345:3;2342:1;2339:10;2336:36;;;2352:18;;:::i;:::-;2336:36;2188:191;;;;:::o;2385:410::-;2425:7;2448:20;2466:1;2448:20;:::i;:::-;2443:25;;2482:20;2500:1;2482:20;:::i;:::-;2477:25;;2537:1;2534;2530:9;2559:30;2577:11;2559:30;:::i;:::-;2548:41;;2738:1;2729:7;2725:15;2722:1;2719:22;2699:1;2692:9;2672:83;2649:139;;2768:18;;:::i;:::-;2649:139;2433:362;2385:410;;;;:::o;2801:180::-;2849:77;2846:1;2839:88;2946:4;2943:1;2936:15;2970:4;2967:1;2960:15;2987:185;3027:1;3044:20;3062:1;3044:20;:::i;:::-;3039:25;;3078:20;3096:1;3078:20;:::i;:::-;3073:25;;3117:1;3107:35;;3122:18;;:::i;:::-;3107:35;3164:1;3161;3157:9;3152:14;;2987:185;;;;:::o;3178:126::-;3215:7;3255:42;3248:5;3244:54;3233:65;;3178:126;;;:::o;3310:96::-;3347:7;3376:24;3394:5;3376:24;:::i;:::-;3365:35;;3310:96;;;:::o;3412:118::-;3499:24;3517:5;3499:24;:::i;:::-;3494:3;3487:37;3412:118;;:::o;3536:442::-;3685:4;3723:2;3712:9;3708:18;3700:26;;3736:71;3804:1;3793:9;3789:17;3780:6;3736:71;:::i;:::-;3817:72;3885:2;3874:9;3870:18;3861:6;3817:72;:::i;:::-;3899;3967:2;3956:9;3952:18;3943:6;3899:72;:::i;:::-;3536:442;;;;;;:::o;3984:90::-;4018:7;4061:5;4054:13;4047:21;4036:32;;3984:90;;;:::o;4080:116::-;4150:21;4165:5;4150:21;:::i;:::-;4143:5;4140:32;4130:60;;4186:1;4183;4176:12;4130:60;4080:116;:::o;4202:137::-;4256:5;4287:6;4281:13;4272:22;;4303:30;4327:5;4303:30;:::i;:::-;4202:137;;;;:::o;4345:345::-;4412:6;4461:2;4449:9;4440:7;4436:23;4432:32;4429:119;;;4467:79;;:::i;:::-;4429:119;4587:1;4612:61;4665:7;4656:6;4645:9;4641:22;4612:61;:::i;:::-;4602:71;;4558:125;4345:345;;;;:::o;4696:222::-;4789:4;4827:2;4816:9;4812:18;4804:26;;4840:71;4908:1;4897:9;4893:17;4884:6;4840:71;:::i;:::-;4696:222;;;;:::o;4924:143::-;4981:5;5012:6;5006:13;4997:22;;5028:33;5055:5;5028:33;:::i;:::-;4924:143;;;;:::o;5073:351::-;5143:6;5192:2;5180:9;5171:7;5167:23;5163:32;5160:119;;;5198:79;;:::i;:::-;5160:119;5318:1;5343:64;5399:7;5390:6;5379:9;5375:22;5343:64;:::i;:::-;5333:74;;5289:128;5073:351;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "286000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addLiquidity(uint256)": "infinite",
								"getAmount(uint256,uint256,uint256)": "infinite",
								"getReserve()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 120,
									"end": 853,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 120,
									"end": 853,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 120,
									"end": 853,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 171,
									"end": 244,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 244,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 171,
									"end": 244,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 171,
									"end": 244,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 171,
									"end": 244,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 171,
									"end": 244,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 171,
									"end": 244,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 171,
									"end": 244,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 226,
									"end": 236,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 214,
									"end": 223,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 223,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 214,
									"end": 236,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 214,
									"end": 236,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 214,
									"end": 236,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 214,
									"end": 236,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 214,
									"end": 236,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 214,
									"end": 236,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 214,
									"end": 236,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 214,
									"end": 236,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 214,
									"end": 236,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 214,
									"end": 236,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 214,
									"end": 236,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 214,
									"end": 236,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 214,
									"end": 236,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 214,
									"end": 236,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 214,
									"end": 236,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 214,
									"end": 236,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 214,
									"end": 236,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 214,
									"end": 236,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 171,
									"end": 244,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 120,
									"end": 853,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 120,
									"end": 853,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "23"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 2,
									"value": "25"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 2,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 2,
									"value": "27"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 2
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 2
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 2,
									"value": "29"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 120,
									"end": 853,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 120,
									"end": 853,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 120,
									"end": 853,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 853,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 120,
									"end": 853,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 120,
									"end": 853,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 853,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 120,
									"end": 853,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 853,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fce71205cb9839f882d7eed3c273d32888bf68ae44f613a7a165ee6e311b472264736f6c63430008120033",
									".code": [
										{
											"begin": 120,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 120,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 120,
											"end": 853,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 120,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 853,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 120,
											"end": 853,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 120,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 853,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 853,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 120,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 120,
											"end": 853,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 120,
											"end": 853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "29C45CB6"
										},
										{
											"begin": 120,
											"end": 853,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 120,
											"end": 853,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "51C6590A"
										},
										{
											"begin": 120,
											"end": 853,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 120,
											"end": 853,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "59BF5D39"
										},
										{
											"begin": 120,
											"end": 853,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 120,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 120,
											"end": 853,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 120,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 120,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 120,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 120,
											"end": 853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 120,
											"end": 853,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 383,
											"end": 631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 383,
											"end": 631,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 631,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 383,
											"end": 631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 383,
											"end": 631,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 383,
											"end": 631,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 383,
											"end": 631,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 383,
											"end": 631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 383,
											"end": 631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 383,
											"end": 631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 383,
											"end": 631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 631,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 383,
											"end": 631,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 383,
											"end": 631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 383,
											"end": 631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 383,
											"end": 631,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 639,
											"end": 850,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 639,
											"end": 850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 639,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 639,
											"end": 850,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 639,
											"end": 850,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 639,
											"end": 850,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 639,
											"end": 850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 639,
											"end": 850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 639,
											"end": 850,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 639,
											"end": 850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 639,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 639,
											"end": 850,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 639,
											"end": 850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 639,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 639,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 639,
											"end": 850,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 639,
											"end": 850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 639,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 639,
											"end": 850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 639,
											"end": 850,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 639,
											"end": 850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 639,
											"end": 850,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 252,
											"end": 371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 252,
											"end": 371,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 252,
											"end": 371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 252,
											"end": 371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 252,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 252,
											"end": 371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 252,
											"end": 371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 252,
											"end": 371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 252,
											"end": 371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 252,
											"end": 371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 252,
											"end": 371,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 383,
											"end": 631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 531,
											"end": 538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 605,
											"end": 622,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 592,
											"end": 602,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 592,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 592,
											"end": 622,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 592,
											"end": 622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 592,
											"end": 622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 592,
											"end": 622,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 592,
											"end": 622,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 592,
											"end": 622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 578,
											"end": 588,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 557,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 557,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 557,
											"end": 588,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 588,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 557,
											"end": 588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 557,
											"end": 588,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 557,
											"end": 588,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 557,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 557,
											"end": 623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 557,
											"end": 623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 557,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 557,
											"end": 623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 557,
											"end": 623,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 557,
											"end": 623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 550,
											"end": 623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 550,
											"end": 623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 383,
											"end": 631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 639,
											"end": 850,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 639,
											"end": 850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 732,
											"end": 733,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 716,
											"end": 728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 716,
											"end": 726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 716,
											"end": 728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 716,
											"end": 728,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 716,
											"end": 728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 716,
											"end": 733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 716,
											"end": 733,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 778,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 778,
											"end": 787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 778,
											"end": 787,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 778,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 778,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 778,
											"end": 787,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 778,
											"end": 787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 778,
											"end": 787,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 778,
											"end": 787,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 778,
											"end": 787,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 771,
											"end": 801,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 771,
											"end": 801,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 771,
											"end": 801,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 802,
											"end": 812,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 822,
											"end": 826,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 829,
											"end": 841,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 771,
											"end": 842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 771,
											"end": 842,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 771,
											"end": 842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 771,
											"end": 842,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 771,
											"end": 842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 771,
											"end": 842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 771,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 842,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 771,
											"end": 842,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 771,
											"end": 842,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 771,
											"end": 842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 842,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 771,
											"end": 842,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 771,
											"end": 842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 771,
											"end": 842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 771,
											"end": 842,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 771,
											"end": 842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 771,
											"end": 842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 771,
											"end": 842,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 639,
											"end": 850,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 639,
											"end": 850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 252,
											"end": 371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 294,
											"end": 301,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 328,
											"end": 337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 337,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 328,
											"end": 337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 328,
											"end": 337,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 337,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 328,
											"end": 337,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 328,
											"end": 337,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 321,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 321,
											"end": 348,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 321,
											"end": 348,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 357,
											"end": 361,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 363,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 321,
											"end": 363,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 321,
											"end": 363,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 321,
											"end": 363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 321,
											"end": 363,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 321,
											"end": 363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 321,
											"end": 363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 321,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 363,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 363,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 321,
											"end": 363,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 363,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 321,
											"end": 363,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 321,
											"end": 363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 321,
											"end": 363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 321,
											"end": 363,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 321,
											"end": 363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 321,
											"end": 363,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 321,
											"end": 363,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 314,
											"end": 363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 314,
											"end": 363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 252,
											"end": 371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 767,
											"end": 773,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 783,
											"end": 789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 832,
											"end": 834,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 820,
											"end": 829,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 811,
											"end": 818,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 807,
											"end": 830,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 803,
											"end": 835,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 800,
											"end": 919,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 800,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 800,
											"end": 919,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 838,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 838,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 838,
											"end": 917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 838,
											"end": 917,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 838,
											"end": 917,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 800,
											"end": 919,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 800,
											"end": 919,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 958,
											"end": 959,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 1028,
											"end": 1035,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1019,
											"end": 1025,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1004,
											"end": 1026,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 983,
											"end": 1036,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 983,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 929,
											"end": 1046,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1085,
											"end": 1087,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1156,
											"end": 1163,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1147,
											"end": 1153,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1136,
											"end": 1145,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1132,
											"end": 1154,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1111,
											"end": 1164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1111,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1101,
											"end": 1164,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1056,
											"end": 1174,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1213,
											"end": 1215,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1284,
											"end": 1291,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1264,
											"end": 1273,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 1260,
											"end": 1282,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1239,
											"end": 1292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1239,
											"end": 1292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1292,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1229,
											"end": 1292,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1184,
											"end": 1302,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1309,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 690,
											"end": 1309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1420,
											"end": 1425,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 1402,
											"end": 1426,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1402,
											"end": 1426,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1397,
											"end": 1400,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1390,
											"end": 1427,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1433,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1315,
											"end": 1433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1536,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1570,
											"end": 1572,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1559,
											"end": 1568,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1555,
											"end": 1573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1547,
											"end": 1573,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1651,
											"end": 1652,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1640,
											"end": 1649,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1636,
											"end": 1653,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 1583,
											"end": 1654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1583,
											"end": 1654,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1661,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1439,
											"end": 1661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1996,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1667,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1775,
											"end": 1777,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1772,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1754,
											"end": 1761,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1750,
											"end": 1773,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1746,
											"end": 1778,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1862,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1743,
											"end": 1862,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1781,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1781,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1781,
											"end": 1860,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1781,
											"end": 1860,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 1781,
											"end": 1860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1862,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1743,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1901,
											"end": 1902,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1926,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1971,
											"end": 1978,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1962,
											"end": 1968,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1951,
											"end": 1960,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1947,
											"end": 1969,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 1979,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 1926,
											"end": 1979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1926,
											"end": 1979,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1926,
											"end": 1979,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1979,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1916,
											"end": 1979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1872,
											"end": 1989,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1996,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1667,
											"end": 1996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2002,
											"end": 2182,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2002,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2050,
											"end": 2127,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2047,
											"end": 2048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2040,
											"end": 2128,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2147,
											"end": 2151,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2144,
											"end": 2145,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2137,
											"end": 2152,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2171,
											"end": 2175,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2168,
											"end": 2169,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2161,
											"end": 2176,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2379,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2188,
											"end": 2379,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2228,
											"end": 2231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2247,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2265,
											"end": 2266,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2247,
											"end": 2267,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2247,
											"end": 2267,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2247,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2267,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2242,
											"end": 2267,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2299,
											"end": 2300,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2281,
											"end": 2301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2281,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2301,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2301,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2324,
											"end": 2325,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2321,
											"end": 2322,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2326,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2310,
											"end": 2326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2310,
											"end": 2326,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2345,
											"end": 2348,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2342,
											"end": 2343,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2339,
											"end": 2349,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2372,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2336,
											"end": 2372,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2352,
											"end": 2370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2352,
											"end": 2370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2370,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2352,
											"end": 2370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2372,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2336,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2379,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2379,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2379,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2188,
											"end": 2379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2795,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2385,
											"end": 2795,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2425,
											"end": 2432,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2448,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2466,
											"end": 2467,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2448,
											"end": 2468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2448,
											"end": 2468,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2448,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2443,
											"end": 2468,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2443,
											"end": 2468,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2500,
											"end": 2501,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2482,
											"end": 2502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2482,
											"end": 2502,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 2482,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2502,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2477,
											"end": 2502,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2537,
											"end": 2538,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2535,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2530,
											"end": 2539,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2577,
											"end": 2588,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2589,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2559,
											"end": 2589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2589,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 2559,
											"end": 2589,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2589,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2548,
											"end": 2589,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2738,
											"end": 2739,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2729,
											"end": 2736,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2725,
											"end": 2740,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2722,
											"end": 2723,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 2719,
											"end": 2741,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2699,
											"end": 2700,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2701,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2672,
											"end": 2755,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2649,
											"end": 2788,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2768,
											"end": 2786,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 2768,
											"end": 2786,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2649,
											"end": 2788,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 2649,
											"end": 2788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2433,
											"end": 2795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2795,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2795,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2795,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2385,
											"end": 2795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2801,
											"end": 2981,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2801,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2849,
											"end": 2926,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2846,
											"end": 2847,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2839,
											"end": 2927,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2946,
											"end": 2950,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2943,
											"end": 2944,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2936,
											"end": 2951,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2970,
											"end": 2974,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2960,
											"end": 2975,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2987,
											"end": 3172,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2987,
											"end": 3172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3027,
											"end": 3028,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3044,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3062,
											"end": 3063,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3044,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3044,
											"end": 3064,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 3044,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3064,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3039,
											"end": 3064,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3096,
											"end": 3097,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3078,
											"end": 3098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3078,
											"end": 3098,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 3078,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3073,
											"end": 3098,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3073,
											"end": 3098,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3117,
											"end": 3118,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3107,
											"end": 3142,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3107,
											"end": 3142,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3122,
											"end": 3140,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3122,
											"end": 3140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3122,
											"end": 3140,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3122,
											"end": 3140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3107,
											"end": 3142,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 3107,
											"end": 3142,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3164,
											"end": 3165,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3162,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3157,
											"end": 3166,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3166,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3152,
											"end": 3166,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2987,
											"end": 3172,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2987,
											"end": 3172,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2987,
											"end": 3172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2987,
											"end": 3172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2987,
											"end": 3172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3178,
											"end": 3304,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3178,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3222,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3248,
											"end": 3253,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3244,
											"end": 3298,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3298,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3233,
											"end": 3298,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3178,
											"end": 3304,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3178,
											"end": 3304,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3178,
											"end": 3304,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3178,
											"end": 3304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3310,
											"end": 3406,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3310,
											"end": 3406,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3347,
											"end": 3354,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3394,
											"end": 3399,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3376,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 3376,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3400,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3365,
											"end": 3400,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3310,
											"end": 3406,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3310,
											"end": 3406,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3310,
											"end": 3406,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3310,
											"end": 3406,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3530,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3412,
											"end": 3530,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3517,
											"end": 3522,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3523,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 3499,
											"end": 3523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3499,
											"end": 3523,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3499,
											"end": 3523,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3494,
											"end": 3497,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3487,
											"end": 3524,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3530,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3530,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3412,
											"end": 3530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3978,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3536,
											"end": 3978,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3685,
											"end": 3689,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3723,
											"end": 3725,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3712,
											"end": 3721,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3708,
											"end": 3726,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 3726,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3700,
											"end": 3726,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3736,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3804,
											"end": 3805,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3793,
											"end": 3802,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3789,
											"end": 3806,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3780,
											"end": 3786,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3736,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3736,
											"end": 3807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3736,
											"end": 3807,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3736,
											"end": 3807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3817,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3885,
											"end": 3887,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3874,
											"end": 3883,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3870,
											"end": 3888,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3861,
											"end": 3867,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3817,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 3817,
											"end": 3889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3817,
											"end": 3889,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3817,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3899,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3967,
											"end": 3969,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3956,
											"end": 3965,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3943,
											"end": 3949,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3899,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3899,
											"end": 3971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3899,
											"end": 3971,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 3899,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3978,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3978,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3536,
											"end": 3978,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3984,
											"end": 4074,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 3984,
											"end": 4074,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4018,
											"end": 4025,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4061,
											"end": 4066,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4054,
											"end": 4067,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4047,
											"end": 4068,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4036,
											"end": 4068,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4036,
											"end": 4068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3984,
											"end": 4074,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3984,
											"end": 4074,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3984,
											"end": 4074,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3984,
											"end": 4074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4080,
											"end": 4196,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4080,
											"end": 4196,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4165,
											"end": 4170,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4150,
											"end": 4171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4150,
											"end": 4171,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 4150,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4143,
											"end": 4148,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4140,
											"end": 4172,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4130,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4130,
											"end": 4190,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4186,
											"end": 4187,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4184,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4176,
											"end": 4188,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4130,
											"end": 4190,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 4130,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4080,
											"end": 4196,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4080,
											"end": 4196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4339,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4202,
											"end": 4339,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4256,
											"end": 4261,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4293,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4281,
											"end": 4294,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4272,
											"end": 4294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4272,
											"end": 4294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4303,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4327,
											"end": 4332,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4303,
											"end": 4333,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 4303,
											"end": 4333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4303,
											"end": 4333,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 4303,
											"end": 4333,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4339,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4339,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4339,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4202,
											"end": 4339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4690,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 4345,
											"end": 4690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4412,
											"end": 4418,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4461,
											"end": 4463,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4449,
											"end": 4458,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4440,
											"end": 4447,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4459,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4432,
											"end": 4464,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 4429,
											"end": 4548,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4429,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4429,
											"end": 4548,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4467,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4467,
											"end": 4546,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4467,
											"end": 4546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4467,
											"end": 4546,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 4467,
											"end": 4546,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4429,
											"end": 4548,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 4429,
											"end": 4548,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4587,
											"end": 4588,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4665,
											"end": 4672,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4656,
											"end": 4662,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4645,
											"end": 4654,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4641,
											"end": 4663,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 4612,
											"end": 4673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 4612,
											"end": 4673,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4602,
											"end": 4673,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4602,
											"end": 4673,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4558,
											"end": 4683,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4690,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4690,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4345,
											"end": 4690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4696,
											"end": 4918,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 4696,
											"end": 4918,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4789,
											"end": 4793,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4827,
											"end": 4829,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4816,
											"end": 4825,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4812,
											"end": 4830,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 4830,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4804,
											"end": 4830,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4840,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4908,
											"end": 4909,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4897,
											"end": 4906,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4893,
											"end": 4910,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4884,
											"end": 4890,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4840,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4840,
											"end": 4911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4840,
											"end": 4911,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 4840,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4696,
											"end": 4918,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4696,
											"end": 4918,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4696,
											"end": 4918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4696,
											"end": 4918,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4696,
											"end": 4918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4924,
											"end": 5067,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4924,
											"end": 5067,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4981,
											"end": 4986,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5012,
											"end": 5018,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5006,
											"end": 5019,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4997,
											"end": 5019,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5055,
											"end": 5060,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5061,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 5028,
											"end": 5061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5061,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 5028,
											"end": 5061,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4924,
											"end": 5067,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4924,
											"end": 5067,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4924,
											"end": 5067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4924,
											"end": 5067,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4924,
											"end": 5067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5424,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 5073,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5143,
											"end": 5149,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5192,
											"end": 5194,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5189,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5171,
											"end": 5178,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5167,
											"end": 5190,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5163,
											"end": 5195,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5279,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5279,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5160,
											"end": 5279,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5198,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 5198,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5198,
											"end": 5277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5198,
											"end": 5277,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 5198,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5279,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 5160,
											"end": 5279,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5319,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5343,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5399,
											"end": 5406,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 5390,
											"end": 5396,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5379,
											"end": 5388,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5375,
											"end": 5397,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5343,
											"end": 5407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 5343,
											"end": 5407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5343,
											"end": 5407,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 5343,
											"end": 5407,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5333,
											"end": 5407,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5289,
											"end": 5417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5424,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5424,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5073,
											"end": 5424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"contracts/swap/swap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"addLiquidity(uint256)": "51c6590a",
							"getAmount(uint256,uint256,uint256)": "29c45cb6",
							"getReserve()": "59bf5d39"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenADdr\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inputToken\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inputTokenReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputTokenReserve\",\"type\":\"uint256\"}],\"name\":\"getAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/swap/swap.sol\":\"Exchange\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"contracts/swap/swap.sol\":{\"keccak256\":\"0x0b504c5df12e5121fb1db33c98a003ad6757466a731c378173af8c92d5119074\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81f657ea0ebfb8a680c3d6b104b7fca4aa33089c71e02ed9acea5e4defa1b1d4\",\"dweb:/ipfs/QmcPXFsJ23YBD7wiFTeaHFLoV8Sd5zdK8GDCJ1z16mR3kN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 82,
								"contract": "contracts/swap/swap.sol:Exchange",
								"label": "tokenAddr",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							77
						]
					},
					"id": 78,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "212:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "394:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "403:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "425:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:0"
									},
									"src": "388:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "625:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "634:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "657:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "682:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:0"
									},
									"src": "619:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "820:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:0"
									},
									"scope": 77,
									"src": "774:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "931:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:0"
									},
									"scope": 77,
									"src": "912:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1211:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1257:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:0"
									},
									"scope": 77,
									"src": "1193:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1557:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1572:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:0"
									},
									"scope": 77,
									"src": "1538:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2342:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:0"
									},
									"scope": 77,
									"src": "2274:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2677:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2699:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2758:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:0"
									},
									"scope": 77,
									"src": "2646:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 78,
							"src": "202:2564:0",
							"usedErrors": []
						}
					],
					"src": "106:2661:0"
				},
				"id": 0
			},
			"contracts/swap/swap.sol": {
				"ast": {
					"absolutePath": "contracts/swap/swap.sol",
					"exportedSymbols": {
						"Exchange": [
							155
						],
						"IERC20": [
							77
						]
					},
					"id": 156,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 79,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 80,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 156,
							"sourceUnit": 78,
							"src": "60:56:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Exchange",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 155,
							"linearizedBaseContracts": [
								155
							],
							"name": "Exchange",
							"nameLocation": "129:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 82,
									"mutability": "mutable",
									"name": "tokenAddr",
									"nameLocation": "153:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 155,
									"src": "145:17:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 81,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "145:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "203:41:1",
										"statements": [
											{
												"expression": {
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 87,
														"name": "tokenAddr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 82,
														"src": "214:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 88,
														"name": "_tokenADdr",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "226:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "214:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "214:22:1"
											}
										]
									},
									"id": 92,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 84,
												"mutability": "mutable",
												"name": "_tokenADdr",
												"nameLocation": "191:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "183:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 83,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "183:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "182:20:1"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "203:0:1"
									},
									"scope": 155,
									"src": "171:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 107,
										"nodeType": "Block",
										"src": "303:68:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 103,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "357:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$155",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$155",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 102,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "349:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 101,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "349:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "349:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 98,
																	"name": "tokenAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "328:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 97,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "321:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 99,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "321:17:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 100,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "339:9:1",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 34,
														"src": "321:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "321:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 96,
												"id": 106,
												"nodeType": "Return",
												"src": "314:49:1"
											}
										]
									},
									"functionSelector": "59bf5d39",
									"id": 108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserve",
									"nameLocation": "261:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "271:2:1"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 108,
												"src": "294:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "294:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "293:9:1"
									},
									"scope": 155,
									"src": "252:119:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "539:92:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 119,
															"name": "outputTokenReserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "557:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 120,
															"name": "inputToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "578:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "557:31:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 124,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 122,
																	"name": "inputToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 110,
																	"src": "592:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 123,
																	"name": "inputTokenReserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 112,
																	"src": "605:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "592:30:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 125,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "591:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "557:66:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 118,
												"id": 127,
												"nodeType": "Return",
												"src": "550:73:1"
											}
										]
									},
									"functionSelector": "29c45cb6",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmount",
									"nameLocation": "392:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 110,
												"mutability": "mutable",
												"name": "inputToken",
												"nameLocation": "420:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "412:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "412:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 112,
												"mutability": "mutable",
												"name": "inputTokenReserve",
												"nameLocation": "449:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "441:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "441:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "outputTokenReserve",
												"nameLocation": "485:18:1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "477:26:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "477:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "401:109:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "531:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "530:9:1"
									},
									"scope": 155,
									"src": "383:248:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "701:149:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 134,
															"name": "getReserve",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "716:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "716:12:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "732:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "716:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 139,
												"nodeType": "IfStatement",
												"src": "712:49:1",
												"trueBody": {
													"id": 138,
													"nodeType": "Block",
													"src": "735:26:1",
													"statements": []
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 144,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "802:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 145,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "806:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "802:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 148,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "822:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Exchange_$155",
																		"typeString": "contract Exchange"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Exchange_$155",
																		"typeString": "contract Exchange"
																	}
																],
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "814:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 146,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "814:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "814:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 150,
															"name": "_tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "829:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 141,
																	"name": "tokenAddr",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 82,
																	"src": "778:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 140,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 77,
																"src": "771:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "771:17:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$77",
																"typeString": "contract IERC20"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "789:12:1",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 76,
														"src": "771:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "771:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "771:71:1"
											}
										]
									},
									"functionSelector": "51c6590a",
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "addLiquidity",
									"nameLocation": "648:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "_tokenAmount",
												"nameLocation": "669:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "661:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "661:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "660:22:1"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "701:0:1"
									},
									"scope": 155,
									"src": "639:211:1",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 156,
							"src": "120:733:1",
							"usedErrors": []
						}
					],
					"src": "33:820:1"
				},
				"id": 1
			}
		}
	}
}